# 1. Create variable age equal to 32 and check its type.
age=32
type(age)

#2. Create variable height equal to 1.85 and check its type.
h=1.85
type(h)

#3. Create variables name and surname. Define them as 'your_name' and 'your_surname'.
name="Aide"
surname="Memmedzade"
print(name,surname)
your_name=name
your_surname=surname
print(your_name,your_surname)

# 4. Sum up name and surname variables. Define as ID.
ID=your_name+your_surname
ID

# 5. Use indexing. Find last letter of 'your_name'.
your_name[-1]

# 6. Use slicing. Find 2nd and 3rd letters of 'your_surname'.
your_surname[1:3]

# 7. Create list as new_list. Include 3 4 5 6 7 integers.
new_list=[3,4,5,6,7]

#8. Remove 5 from new_list.
new_list.remove(5)
print(new_list)

# 9. Delete 2nd value of new_list.
new_list.pop(1)
print(new_list)

# 10. Create tuple as new_tuple. Include 3 4 5 6 7 integers.
new_tuple=(3,4,5,6,7)
type(new_tuple)



# 11. Change 4 in new_tuple to 8.
new_tuple=list(new_tuple)
type(new_tuple)
new_tuple[1]=8
print(new_tuple)
new_tuple=tuple(new_tuple)
type(new_tuple)


# 12. Find the difference between age and 25, if the number is greater than 17 return the square of the difference.
diff=age-25
if diff>17:
    print(diff**2)
else:
    print(diff)   

# 13. Write a Python function to check number is positive, negative or zero.
def check_num(x):
    if x > 0:
        return "Positive"
    elif x < 0:
        return "Negative"
    else:
        return "Zero"

check_num(5)

check_num(0)

check_num(-8)

# 14. Create a function called "addition_2number" that takes two input numbers from user and returns sum and count of them.
def addition_2number():
    x=int(input("X"))
    y=int(input("Y"))
    list=[]
    list.append(x)
    list.append(y)
    count=len(list)
    return x+y,count

addition_2number()

# 15.Create a function called "addition" that can add two or more numbers till user enters 
# zero and returns answer and count of input numbers in a list.
def addition():
    say=0
    cem=0
    while True:
        eded=float(input())
        if eded==0:
            break
        cem=cem+eded
        say=say+1
    return [cem,say]


# 16. Create a function called "subtraction" that can subtract two or more numbers till user
# enters zero and returns answer and countof input numbers in a list.

def subtraction():
    say=0
    sub=0
    while True:
        eded=float(input())
        if eded==0:
            break
        sub=sub-eded
        say=say+1
    return [sub,say]


# 17. Create a function called "multiplication" that can multiply two or more numbers till
# user enters zero and returns answer and count of input numbers in a list.

def multiplication():
    say=0
    mult=1
    while True:
        eded=float(input())
        if eded==0:
            break
        mult=mult*eded
        say=say+1
    return [mult,say]


# 18. Create a function called “average” that returns mean of “addition” function.
def average():
    say=0
    cem=0
    while True:
        eded=float(input())
        if eded==0:
            break
        cem=cem+eded
        say=say+1
    return cem/say

average()
  

# 19. Create a simple calculator that asks user to perform operations among created functions.
def calculator():
    selection=input()
    if selection=='+':
        print(addition())
    elif selection=='-':
        print(subtraction())
    elif selection=='*':
        print(multiplication())
    
    
calculator()
    

# 20. Write a Python program to find intersection of two given arrays using lambda.
a=[1,2,3,4,5,6,7,8,9]
b=[0,5,8,10]
ls=[]
for i in a:
    if i in b:
        ls.append(i)

ls


[i for i in a if i in b ]

intercept=lambda x,y: [i for i in x if i in y ]
intercept(a,b)


# 21. Write a Python program to add two given lists using map and lambda.
list(map(lambda x,y: x+y,a,b))


# 22. Write a Python program that stores numbers in a list which are divisible by nineteen or thirteen from a given list. 

[i for i in range(100) if i%13==0 or i%19==0]
